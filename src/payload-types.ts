/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    scopes: Scope;
    inventory: Inventory;
    part: Part;
    repairs: Repair;
    evaluation: Evaluation;
    quotation: Quotation;
    invoices: Invoice;
    brands: Brand;
    manufacturers: Manufacturer;
    companies: Company;
    users: User;
    media: Media;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    scopes: ScopesSelect<false> | ScopesSelect<true>;
    inventory: InventorySelect<false> | InventorySelect<true>;
    part: PartSelect<false> | PartSelect<true>;
    repairs: RepairsSelect<false> | RepairsSelect<true>;
    evaluation: EvaluationSelect<false> | EvaluationSelect<true>;
    quotation: QuotationSelect<false> | QuotationSelect<true>;
    invoices: InvoicesSelect<false> | InvoicesSelect<true>;
    brands: BrandsSelect<false> | BrandsSelect<true>;
    manufacturers: ManufacturersSelect<false> | ManufacturersSelect<true>;
    companies: CompaniesSelect<false> | CompaniesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    settings: Setting;
  };
  globalsSelect: {
    settings: SettingsSelect<false> | SettingsSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "scopes".
 */
export interface Scope {
  id: number;
  code?: string | null;
  name: string;
  Company?: string | null;
  type: 'rigid' | 'flexible';
  modelNumber: string;
  serialNumber: string;
  brand: number | Brand;
  manufacturer: number | Manufacturer;
  status: 'pending' | 'evaluated' | 'approved' | 'denied' | 'completed';
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  receivedDate?: string | null;
  createdBy?: (number | null) | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "brands".
 */
export interface Brand {
  id: number;
  title: string;
  description?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "manufacturers".
 */
export interface Manufacturer {
  id: number;
  companyName?: string | null;
  companyEmail?: string | null;
  companyPhone?: string | null;
  country:
    | 'CA'
    | 'CN'
    | 'EG'
    | 'FR'
    | 'DE'
    | 'IT'
    | 'JP'
    | 'LB'
    | 'RU'
    | 'SA'
    | 'SG'
    | 'ZA'
    | 'ES'
    | 'SE'
    | 'CH'
    | 'AE'
    | 'GB'
    | 'US';
  companyWebsite?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  firstName: string;
  lastName: string;
  role: 'admin' | 'user';
  /**
   * Whether this user can log in
   */
  isActive?: boolean | null;
  phone?: string | null;
  department?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * Manage inventory items and track stock levels
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "inventory".
 */
export interface Inventory {
  id: number;
  name: string;
  part?: (number | Part)[] | null;
  scope_type: 'rigid' | 'flexible';
  /**
   * Current stock quantity
   */
  quantity?: number | null;
  /**
   * Minimum quantity before reorder alert
   */
  reorder_point?: number | null;
  /**
   * Maximum stock level
   */
  max_quantity?: number | null;
  /**
   * Cost per unit
   */
  unit_cost?: number | null;
  /**
   * Selling price per unit
   */
  unit_price?: number | null;
  manufacturer?: (number | null) | Manufacturer;
  /**
   * Storage location
   */
  location?: string | null;
  status?: ('in_stock' | 'low_stock' | 'out_of_stock' | 'discontinued') | null;
  last_updated?: string | null;
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "part".
 */
export interface Part {
  id: number;
  part_name: string;
  part_number: string;
  length?: number | null;
  diameter?: number | null;
  cost?: number | null;
  price?: number | null;
  manufacturer?: (number | null) | Manufacturer;
  country?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "repairs".
 */
export interface Repair {
  id: number;
  repair_number: string;
  scope: number | Scope;
  evaluation?: (number | null) | Evaluation;
  quotation?: (number | null) | Quotation;
  status: 'pending' | 'in_progress' | 'completed' | 'shipped' | 'cancelled';
  parts_used?:
    | {
        part: number | Part;
        quantity_used: number;
        unit_cost: number;
        total_cost?: number | null;
        id?: string | null;
      }[]
    | null;
  labor_cost?: number | null;
  total_cost?: number | null;
  notes?: string | null;
  start_date?: string | null;
  completion_date?: string | null;
  created_by?: (number | null) | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "evaluation".
 */
export interface Evaluation {
  id: number;
  evaluation_number: string;
  scope: number | Scope;
  status: 'pending' | 'in_progress' | 'completed';
  evaluation_date?: string | null;
  problems_identified: string;
  recommended_actions?: string | null;
  estimated_cost?: number | null;
  /**
   * Estimated repair duration in days
   */
  estimated_duration?: number | null;
  evaluated_by?: (number | null) | User;
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "quotation".
 */
export interface Quotation {
  id: number;
  quotation_number: string;
  scope: number | Scope;
  evaluation?: (number | null) | Evaluation;
  quotation_date?: string | null;
  offer_validity?: string | null;
  /**
   * Delivery period in days
   */
  delivery_period?: number | null;
  problems: string;
  service_type: 'repair' | 'maintenance' | 'calibration' | 'inspection';
  /**
   * Total quotation price
   */
  price: number;
  discount?: number | null;
  quotation_status: 'draft' | 'sent' | 'accepted' | 'rejected' | 'expired';
  notes?: string | null;
  created_by?: (number | null) | User;
  /**
   * Generated quotation PDF. Use the API endpoint /api/quotations/{id}/generate-pdf to generate and download the PDF.
   */
  pdf?: (number | null) | Media;
  /**
   * S3 URL of the generated PDF
   */
  pdf_url?: string | null;
  /**
   * Timestamp when PDF was last generated
   */
  pdf_generated_at?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "invoices".
 */
export interface Invoice {
  id: number;
  invoice_number: string;
  scope: number | Scope;
  repair?: (number | null) | Repair;
  quotation?: (number | null) | Quotation;
  invoice_date?: string | null;
  due_date?: string | null;
  status: 'draft' | 'sent' | 'paid' | 'overdue' | 'cancelled';
  /**
   * Price per unit
   */
  unit_price: number;
  /**
   * Quantity of units
   */
  quantity: number;
  /**
   * Unit price × Quantity
   */
  total_price?: number | null;
  /**
   * Same as total price
   */
  subtotal?: number | null;
  /**
   * 11% of subtotal
   */
  tax?: number | null;
  /**
   * Subtotal + Tax
   */
  total_due?: number | null;
  payment_terms?: string | null;
  notes?: string | null;
  created_by?: (number | null) | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "companies".
 */
export interface Company {
  id: number;
  name: string;
  phoneNumber?: number | null;
  email?: string | null;
  address?: string | null;
  mofNumber?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'scopes';
        value: number | Scope;
      } | null)
    | ({
        relationTo: 'inventory';
        value: number | Inventory;
      } | null)
    | ({
        relationTo: 'part';
        value: number | Part;
      } | null)
    | ({
        relationTo: 'repairs';
        value: number | Repair;
      } | null)
    | ({
        relationTo: 'evaluation';
        value: number | Evaluation;
      } | null)
    | ({
        relationTo: 'quotation';
        value: number | Quotation;
      } | null)
    | ({
        relationTo: 'invoices';
        value: number | Invoice;
      } | null)
    | ({
        relationTo: 'brands';
        value: number | Brand;
      } | null)
    | ({
        relationTo: 'manufacturers';
        value: number | Manufacturer;
      } | null)
    | ({
        relationTo: 'companies';
        value: number | Company;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "scopes_select".
 */
export interface ScopesSelect<T extends boolean = true> {
  code?: T;
  name?: T;
  Company?: T;
  type?: T;
  modelNumber?: T;
  serialNumber?: T;
  brand?: T;
  manufacturer?: T;
  status?: T;
  description?: T;
  receivedDate?: T;
  createdBy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "inventory_select".
 */
export interface InventorySelect<T extends boolean = true> {
  name?: T;
  part?: T;
  scope_type?: T;
  quantity?: T;
  reorder_point?: T;
  max_quantity?: T;
  unit_cost?: T;
  unit_price?: T;
  manufacturer?: T;
  location?: T;
  status?: T;
  last_updated?: T;
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "part_select".
 */
export interface PartSelect<T extends boolean = true> {
  part_name?: T;
  part_number?: T;
  length?: T;
  diameter?: T;
  cost?: T;
  price?: T;
  manufacturer?: T;
  country?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "repairs_select".
 */
export interface RepairsSelect<T extends boolean = true> {
  repair_number?: T;
  scope?: T;
  evaluation?: T;
  quotation?: T;
  status?: T;
  parts_used?:
    | T
    | {
        part?: T;
        quantity_used?: T;
        unit_cost?: T;
        total_cost?: T;
        id?: T;
      };
  labor_cost?: T;
  total_cost?: T;
  notes?: T;
  start_date?: T;
  completion_date?: T;
  created_by?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "evaluation_select".
 */
export interface EvaluationSelect<T extends boolean = true> {
  evaluation_number?: T;
  scope?: T;
  status?: T;
  evaluation_date?: T;
  problems_identified?: T;
  recommended_actions?: T;
  estimated_cost?: T;
  estimated_duration?: T;
  evaluated_by?: T;
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "quotation_select".
 */
export interface QuotationSelect<T extends boolean = true> {
  quotation_number?: T;
  scope?: T;
  evaluation?: T;
  quotation_date?: T;
  offer_validity?: T;
  delivery_period?: T;
  problems?: T;
  service_type?: T;
  price?: T;
  discount?: T;
  quotation_status?: T;
  notes?: T;
  created_by?: T;
  pdf?: T;
  pdf_url?: T;
  pdf_generated_at?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "invoices_select".
 */
export interface InvoicesSelect<T extends boolean = true> {
  invoice_number?: T;
  scope?: T;
  repair?: T;
  quotation?: T;
  invoice_date?: T;
  due_date?: T;
  status?: T;
  unit_price?: T;
  quantity?: T;
  total_price?: T;
  subtotal?: T;
  tax?: T;
  total_due?: T;
  payment_terms?: T;
  notes?: T;
  created_by?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "brands_select".
 */
export interface BrandsSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "manufacturers_select".
 */
export interface ManufacturersSelect<T extends boolean = true> {
  companyName?: T;
  companyEmail?: T;
  companyPhone?: T;
  country?: T;
  companyWebsite?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "companies_select".
 */
export interface CompaniesSelect<T extends boolean = true> {
  name?: T;
  phoneNumber?: T;
  email?: T;
  address?: T;
  mofNumber?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  role?: T;
  isActive?: T;
  phone?: T;
  department?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  prefix?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "settings".
 */
export interface Setting {
  id: number;
  companyName: string;
  companyPhone: string;
  companyEmail: string;
  mofNumber: string;
  /**
   * Exchange rate: $1 = X L.L.
   */
  dollarRate: number;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "settings_select".
 */
export interface SettingsSelect<T extends boolean = true> {
  companyName?: T;
  companyPhone?: T;
  companyEmail?: T;
  mofNumber?: T;
  dollarRate?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}